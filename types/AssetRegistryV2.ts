/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface AssetRegistryV2Interface extends utils.Interface {
  contractName: "AssetRegistryV2";
  functions: {
    "activateAsset(uint256)": FunctionFragment;
    "activateAssetOnTube(uint256,uint256)": FunctionFragment;
    "activateTube(uint256)": FunctionFragment;
    "activeAssetIDs(uint256)": FunctionFragment;
    "activeTubeIDs(uint256)": FunctionFragment;
    "assetAddress(uint256,uint256)": FunctionFragment;
    "assetID(uint256,address)": FunctionFragment;
    "deactivateAsset(uint256)": FunctionFragment;
    "deactivateAssetOnTube(uint256,uint256)": FunctionFragment;
    "deactivateTube(uint256)": FunctionFragment;
    "grant(address)": FunctionFragment;
    "isActive(uint256,uint256)": FunctionFragment;
    "isActiveAssetID(uint256)": FunctionFragment;
    "isActiveTubeID(uint256)": FunctionFragment;
    "newAsset(uint256,address)": FunctionFragment;
    "numOfAssets()": FunctionFragment;
    "operators(address)": FunctionFragment;
    "owner()": FunctionFragment;
    "removeAssetOnTube(uint256,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "revoke(address)": FunctionFragment;
    "setAssetOnTube(uint256,uint256,address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "activateAsset",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "activateAssetOnTube",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "activateTube",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "activeAssetIDs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "activeTubeIDs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "assetAddress",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "assetID",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateAsset",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateAssetOnTube",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateTube",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "grant", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isActive",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isActiveAssetID",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isActiveTubeID",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "newAsset",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "numOfAssets",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "operators", values: [string]): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "removeAssetOnTube",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "revoke", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setAssetOnTube",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "activateAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activateAssetOnTube",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activateTube",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activeAssetIDs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activeTubeIDs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "assetID", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deactivateAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deactivateAssetOnTube",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deactivateTube",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grant", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isActive", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isActiveAssetID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isActiveTubeID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "newAsset", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "numOfAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "operators", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeAssetOnTube",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revoke", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAssetOnTube",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "AssetActivated(uint256)": EventFragment;
    "AssetDeactivated(uint256)": EventFragment;
    "AssetOnTubeActivated(uint256,uint256,address)": EventFragment;
    "AssetOnTubeDeactivated(uint256,uint256,address)": EventFragment;
    "AssetRemovedOnTube(uint256,uint256,address)": EventFragment;
    "AssetSetOnTube(uint256,uint256,address)": EventFragment;
    "NewAsset(uint256,uint256,address)": EventFragment;
    "OperatorGranted(address)": EventFragment;
    "OperatorRevoked(address)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "TubeActivated(uint256)": EventFragment;
    "TubeDeactivated(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AssetActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetDeactivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetOnTubeActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetOnTubeDeactivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetRemovedOnTube"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AssetSetOnTube"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewAsset"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OperatorGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OperatorRevoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TubeActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TubeDeactivated"): EventFragment;
}

export type AssetActivatedEvent = TypedEvent<[BigNumber], { id: BigNumber }>;

export type AssetActivatedEventFilter = TypedEventFilter<AssetActivatedEvent>;

export type AssetDeactivatedEvent = TypedEvent<[BigNumber], { id: BigNumber }>;

export type AssetDeactivatedEventFilter =
  TypedEventFilter<AssetDeactivatedEvent>;

export type AssetOnTubeActivatedEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  { assetID: BigNumber; tubeID: BigNumber; assetAddress: string }
>;

export type AssetOnTubeActivatedEventFilter =
  TypedEventFilter<AssetOnTubeActivatedEvent>;

export type AssetOnTubeDeactivatedEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  { assetID: BigNumber; tubeID: BigNumber; assetAddress: string }
>;

export type AssetOnTubeDeactivatedEventFilter =
  TypedEventFilter<AssetOnTubeDeactivatedEvent>;

export type AssetRemovedOnTubeEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  { assetID: BigNumber; tubeID: BigNumber; assetAddress: string }
>;

export type AssetRemovedOnTubeEventFilter =
  TypedEventFilter<AssetRemovedOnTubeEvent>;

export type AssetSetOnTubeEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  { assetID: BigNumber; tubeID: BigNumber; assetAddress: string }
>;

export type AssetSetOnTubeEventFilter = TypedEventFilter<AssetSetOnTubeEvent>;

export type NewAssetEvent = TypedEvent<
  [BigNumber, BigNumber, string],
  { assetID: BigNumber; tubeID: BigNumber; assetAddress: string }
>;

export type NewAssetEventFilter = TypedEventFilter<NewAssetEvent>;

export type OperatorGrantedEvent = TypedEvent<[string], { operator: string }>;

export type OperatorGrantedEventFilter = TypedEventFilter<OperatorGrantedEvent>;

export type OperatorRevokedEvent = TypedEvent<[string], { operator: string }>;

export type OperatorRevokedEventFilter = TypedEventFilter<OperatorRevokedEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export type TubeActivatedEvent = TypedEvent<[BigNumber], { id: BigNumber }>;

export type TubeActivatedEventFilter = TypedEventFilter<TubeActivatedEvent>;

export type TubeDeactivatedEvent = TypedEvent<[BigNumber], { id: BigNumber }>;

export type TubeDeactivatedEventFilter = TypedEventFilter<TubeDeactivatedEvent>;

export interface AssetRegistryV2 extends BaseContract {
  contractName: "AssetRegistryV2";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AssetRegistryV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    activateAsset(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    activateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    activateTube(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    activeAssetIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    activeTubeIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    assetAddress(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    assetID(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    deactivateAsset(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deactivateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deactivateTube(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    grant(
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isActive(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isActiveAssetID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isActiveTubeID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    newAsset(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    numOfAssets(overrides?: CallOverrides): Promise<[BigNumber]>;

    operators(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    removeAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    revoke(
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  activateAsset(
    _id: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  activateAssetOnTube(
    _assetID: BigNumberish,
    _tubeID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  activateTube(
    _id: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  activeAssetIDs(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  activeTubeIDs(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  assetAddress(
    _assetID: BigNumberish,
    _tubeID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  assetID(
    _tubeID: BigNumberish,
    _assetAddr: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  deactivateAsset(
    _id: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deactivateAssetOnTube(
    _assetID: BigNumberish,
    _tubeID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deactivateTube(
    _id: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  grant(
    _account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isActive(
    _assetID: BigNumberish,
    _tubeID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isActiveAssetID(
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isActiveTubeID(
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  newAsset(
    _tubeID: BigNumberish,
    _assetAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  numOfAssets(overrides?: CallOverrides): Promise<BigNumber>;

  operators(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  removeAssetOnTube(
    _assetID: BigNumberish,
    _tubeID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  revoke(
    _account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setAssetOnTube(
    _assetID: BigNumberish,
    _tubeID: BigNumberish,
    _assetAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    activateAsset(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    activateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    activateTube(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    activeAssetIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    activeTubeIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    assetAddress(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    assetID(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deactivateAsset(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deactivateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deactivateTube(_id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    grant(_account: string, overrides?: CallOverrides): Promise<void>;

    isActive(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isActiveAssetID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isActiveTubeID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    newAsset(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    numOfAssets(overrides?: CallOverrides): Promise<BigNumber>;

    operators(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    removeAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    revoke(_account: string, overrides?: CallOverrides): Promise<void>;

    setAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AssetActivated(uint256)"(
      id?: BigNumberish | null
    ): AssetActivatedEventFilter;
    AssetActivated(id?: BigNumberish | null): AssetActivatedEventFilter;

    "AssetDeactivated(uint256)"(
      id?: BigNumberish | null
    ): AssetDeactivatedEventFilter;
    AssetDeactivated(id?: BigNumberish | null): AssetDeactivatedEventFilter;

    "AssetOnTubeActivated(uint256,uint256,address)"(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetOnTubeActivatedEventFilter;
    AssetOnTubeActivated(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetOnTubeActivatedEventFilter;

    "AssetOnTubeDeactivated(uint256,uint256,address)"(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetOnTubeDeactivatedEventFilter;
    AssetOnTubeDeactivated(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetOnTubeDeactivatedEventFilter;

    "AssetRemovedOnTube(uint256,uint256,address)"(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetRemovedOnTubeEventFilter;
    AssetRemovedOnTube(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetRemovedOnTubeEventFilter;

    "AssetSetOnTube(uint256,uint256,address)"(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetSetOnTubeEventFilter;
    AssetSetOnTube(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): AssetSetOnTubeEventFilter;

    "NewAsset(uint256,uint256,address)"(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): NewAssetEventFilter;
    NewAsset(
      assetID?: BigNumberish | null,
      tubeID?: BigNumberish | null,
      assetAddress?: string | null
    ): NewAssetEventFilter;

    "OperatorGranted(address)"(
      operator?: string | null
    ): OperatorGrantedEventFilter;
    OperatorGranted(operator?: string | null): OperatorGrantedEventFilter;

    "OperatorRevoked(address)"(
      operator?: string | null
    ): OperatorRevokedEventFilter;
    OperatorRevoked(operator?: string | null): OperatorRevokedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "TubeActivated(uint256)"(
      id?: BigNumberish | null
    ): TubeActivatedEventFilter;
    TubeActivated(id?: BigNumberish | null): TubeActivatedEventFilter;

    "TubeDeactivated(uint256)"(
      id?: BigNumberish | null
    ): TubeDeactivatedEventFilter;
    TubeDeactivated(id?: BigNumberish | null): TubeDeactivatedEventFilter;
  };

  estimateGas: {
    activateAsset(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    activateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    activateTube(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    activeAssetIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    activeTubeIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetAddress(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetID(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deactivateAsset(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deactivateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deactivateTube(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    grant(
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isActive(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isActiveAssetID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isActiveTubeID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    newAsset(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    numOfAssets(overrides?: CallOverrides): Promise<BigNumber>;

    operators(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    removeAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    revoke(
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    activateAsset(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    activateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    activateTube(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    activeAssetIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    activeTubeIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assetAddress(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assetID(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deactivateAsset(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deactivateAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deactivateTube(
      _id: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    grant(
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isActive(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isActiveAssetID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isActiveTubeID(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    newAsset(
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    numOfAssets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    operators(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    revoke(
      _account: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setAssetOnTube(
      _assetID: BigNumberish,
      _tubeID: BigNumberish,
      _assetAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
