/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestimonyDAO, TestimonyDAOInterface } from "../TestimonyDAO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "testimony",
        type: "bytes",
      },
    ],
    name: "Testimony",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "addTestimony",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610153806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063513bd02114610030575b600080fd5b61004361003e36600461009b565b610045565b005b823373ffffffffffffffffffffffffffffffffffffffff167f738e5ba8c1c11648ac3cb5c81364c2ed48f5af4b2937b323a0e1f4cce15801cf848460405161008e929190610117565b60405180910390a3505050565b6000806000604084860312156100b057600080fd5b83359250602084013567ffffffffffffffff808211156100cf57600080fd5b818601915086601f8301126100e357600080fd5b8135818111156100f257600080fd5b87602082850101111561010457600080fd5b6020830194508093505050509250925092565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea164736f6c6343000807000a";

type TestimonyDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestimonyDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestimonyDAO__factory extends ContractFactory {
  constructor(...args: TestimonyDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestimonyDAO";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestimonyDAO> {
    return super.deploy(overrides || {}) as Promise<TestimonyDAO>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestimonyDAO {
    return super.attach(address) as TestimonyDAO;
  }
  connect(signer: Signer): TestimonyDAO__factory {
    return super.connect(signer) as TestimonyDAO__factory;
  }
  static readonly contractName: "TestimonyDAO";
  public readonly contractName: "TestimonyDAO";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestimonyDAOInterface {
    return new utils.Interface(_abi) as TestimonyDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestimonyDAO {
    return new Contract(address, _abi, signerOrProvider) as TestimonyDAO;
  }
}
