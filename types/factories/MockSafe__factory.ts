/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockSafe, MockSafeInterface } from "../MockSafe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_safe",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositToSafe",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "points",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161078538038061078583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106f2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063186f0354146100465780638340f54914610076578063dc30e3b71461008b575b600080fd5b600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100896100843660046105ce565b6100c4565b005b6100b6610099366004610573565b600160209081526000928352604080842090915290825290205481565b60405190815260200161006d565b6103e881101561011b5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c696420616d6f756e7400000000000000000000000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015281906001600160a01b038516906370a082319060240160206040518083038186803b15801561015c57600080fd5b505afa158015610170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610194919061060f565b10156101e25760405162461bcd60e51b815260206004820152601460248201527f696e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610112565b6000546101fc906001600160a01b03858116911683610288565b6001600160a01b03808416600090815260016020908152604080832093861683529290529081208054839290610233908490610677565b9091555050604080516001600160a01b038086168252841660208201529081018290527f6ae6f4636f47694259962de47a2c9cb429a7d9f48d2f76e16419486a362561689060600160405180910390a1505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526102ef9084906102f4565b505050565b6000610349826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103d99092919063ffffffff16565b8051909150156102ef578080602001905181019061036791906105ac565b6102ef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610112565b60606103e884846000856103f2565b90505b9392505050565b60608247101561046a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610112565b6001600160a01b0385163b6104c15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610112565b600080866001600160a01b031685876040516104dd9190610628565b60006040518083038185875af1925050503d806000811461051a576040519150601f19603f3d011682016040523d82523d6000602084013e61051f565b606091505b509150915061052f82828661053a565b979650505050505050565b606083156105495750816103eb565b8251156105595782518084602001fd5b8160405162461bcd60e51b81526004016101129190610644565b6000806040838503121561058657600080fd5b8235610591816106cd565b915060208301356105a1816106cd565b809150509250929050565b6000602082840312156105be57600080fd5b815180151581146103eb57600080fd5b6000806000606084860312156105e357600080fd5b83356105ee816106cd565b925060208401356105fe816106cd565b929592945050506040919091013590565b60006020828403121561062157600080fd5b5051919050565b6000825161063a81846020870161069d565b9190910192915050565b602081526000825180602084015261066381604085016020870161069d565b601f01601f19169190910160400192915050565b6000821982111561069857634e487b7160e01b600052601160045260246000fd5b500190565b60005b838110156106b85781810151838201526020016106a0565b838111156106c7576000848401525b50505050565b6001600160a01b03811681146106e257600080fd5b5056fea164736f6c6343000807000a";

type MockSafeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSafeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSafe__factory extends ContractFactory {
  constructor(...args: MockSafeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockSafe";
  }

  deploy(
    _safe: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSafe> {
    return super.deploy(_safe, overrides || {}) as Promise<MockSafe>;
  }
  getDeployTransaction(
    _safe: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_safe, overrides || {});
  }
  attach(address: string): MockSafe {
    return super.attach(address) as MockSafe;
  }
  connect(signer: Signer): MockSafe__factory {
    return super.connect(signer) as MockSafe__factory;
  }
  static readonly contractName: "MockSafe";
  public readonly contractName: "MockSafe";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSafeInterface {
    return new utils.Interface(_abi) as MockSafeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSafe {
    return new Contract(address, _abi, signerOrProvider) as MockSafe;
  }
}
