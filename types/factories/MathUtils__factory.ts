/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MathUtils, MathUtilsInterface } from "../MathUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "difference",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "within1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61013361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806313a1ec7514610045578063a95cb7f71461006d575b600080fd5b6100586100533660046100df565b61008e565b60405190151581526020015b60405180910390f35b61008061007b3660046100df565b6100a7565b604051908152602001610064565b6000600161009c84846100ba565b111590505b92915050565b60006100b383836100ba565b9392505050565b6000818311156100d5576100ce8284610101565b90506100a1565b6100b38383610101565b600080604083850312156100f257600080fd5b50508035926020909101359150565b60008282101561012157634e487b7160e01b600052601160045260246000fd5b50039056fea164736f6c6343000807000a";

type MathUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MathUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MathUtils__factory extends ContractFactory {
  constructor(...args: MathUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MathUtils";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MathUtils> {
    return super.deploy(overrides || {}) as Promise<MathUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MathUtils {
    return super.attach(address) as MathUtils;
  }
  connect(signer: Signer): MathUtils__factory {
    return super.connect(signer) as MathUtils__factory;
  }
  static readonly contractName: "MathUtils";
  public readonly contractName: "MathUtils";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MathUtilsInterface {
    return new utils.Interface(_abi) as MathUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MathUtils {
    return new Contract(address, _abi, signerOrProvider) as MathUtils;
  }
}
